// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": [[ marshal .Schemes ]],
    "swagger": "2.0",
    "info": {
        "description": "[[escape .Description]]",
        "title": "[[.Title]]",
        "contact": {
            "name": "The Developer",
            "email": "wahyusahaja.official@gmail.com"
        },
        "version": "[[.Version]]"
    },
    "host": "[[.Host]]",
    "basePath": "[[.BasePath]]",
    "paths": {
        "/ping": {
            "get": {
                "description": "Returns pong",
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithPagination-array_User-Pagination"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithData-User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the user with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object that needs to be updated",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the user with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateUserInput": {
            "type": "object",
            "required": [
                "full_name"
            ],
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/Image"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "blur_hash": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                }
            }
        },
        "InternalErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "request_id": {
                    "type": "string",
                    "example": "abcd-1234"
                }
            }
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "ResponseWithData-User": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "ResponseWithPagination-array_User-Pagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "$ref": "#/definitions/Image"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "optional",
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Validation failed"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type: Bearer token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Mulo Music Streaming API",
	Description:      "This documentation for access Mulo Music Streaming",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "[[",
	RightDelim:       "]]",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
